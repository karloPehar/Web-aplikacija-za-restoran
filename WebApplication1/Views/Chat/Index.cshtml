
@using ClassLibrary1.ViewModels;
@using ClassLibrary1.Models;
@using WebApplication1.Helper


@model ClassLibrary1.ViewModels.ListaPorukaVM
@{ 
     User aktivan = Autenfikacija.GetLogiraniKorisnik(Context);
}

    <div class="container ">
        <div class="chatbox__body">

            


            @{
                if(aktivan.UlogaID==2)
                foreach (var x in Model.ListaPoruka)
                {
                        <div class="chatbox__body__message chatbox__body__message--left">

                            <div class="chatbox_timing" id="chat_time">
                                <ul>
                                    <li><a href="#"><i class="fa fa-calendar"></i> @x.DatumPoruke</a></li>
                                    <li><a href="#"><i class="fa fa-clock-o"></i> @x.VrijemePoruke</a></li>
                                </ul>
                            </div>

                            <div class="clearfix"></div>
                            <div class="ul_section_full" id="poruka_value">
                                <ul class="ul_msg">
                                    <li><strong>@x.User</strong></li>
                                    <li>@x.Sadrzaj </li>
                                </ul>

                            </div>



                        </div>
                 }



             }

        <div id="chatbox_body"></div>
                        <template id="chat_template">
                            <div class="chatbox__body__message chatbox__body__message--left">

                                <div class="chatbox_timing" id="chat_time">
                                    <ul>
                                        <li><a href="#"><i class="fa fa-calendar"></i> 22/11/2018</a></li>
                                        <li><a href="#"><i class="fa fa-clock-o"></i> 7:00 PM</a></li>
                                    </ul>
                                </div>

                                <div class="clearfix"></div>
                                <div class="ul_section_full" id="poruka_value">
                                    <ul class="ul_msg">
                                        <li><strong>Person Name</strong></li>
                                        <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit. </li>
                                    </ul>

                                </div>

                            </div>
                        </template>






                    </div>
                    <div id="msgbtnDiv"></div>




               



                </div>

<script src="~/js/jquery.min.js"></script>
<script src="~/SignalR/dist/browser/signalr.min.js"></script>
<script>

  

    $(function () {

        $.get("/Chat/SubmitFormPartial", function (data) {

            $("#msgbtnDiv").html(data);


        });
        //$("#forma").submit(function () {
        //    $("#forma")[0].reset();
        //});

    });

    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatt", {
            accessTokenFactory: () => "testing"
        })
        .build();

    connection.on("refreshForm", function () {

       
        $.get("/Chat/SubmitFormPartial", function (data) {
           
            $("#msgbtnDiv").html(data);


        });


    });
    connection.on("PrimljenaPoruka", function (poruka,datum,vrijeme,user) {

       


        var temp = document.getElementById("chat_template");
        var vrijemeUl = temp.content.getElementById("chat_time").getElementsByTagName("UL")[0];
        vrijemeUl.getElementsByTagName("LI")[0].innerHTML = datum;
        vrijemeUl.getElementsByTagName("LI")[1].innerHTML = vrijeme;



        var porukaUl = temp.content.getElementById("poruka_value").getElementsByTagName("UL")[0];
        porukaUl.getElementsByTagName("LI")[0].innerHTML = user;
        porukaUl.getElementsByTagName("LI")[1].innerHTML = poruka;
        var clon = temp.content.cloneNode(true);
        document.getElementById("chatbox_body").appendChild(clon);




    });

  
    


   
    async function start() {
    try {
        await connection.start();
       
    } catch (err) {
        console.log(err);
        setTimeout(start, 5000);
    }
    };

    connection.onclose(start);


    start();



</script>




<!-- END section -->
