// <auto-generated />
using System;
using ClassLibrary1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(mojDbContext))]
    [Migration("20200817143250_dodavanje_foreignID")]
    partial class dodavanje_foreignID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassLibrary1.Models.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("SlikaID");

                    b.Property<int?>("TipProizvodaID");

                    b.Property<int?>("UserID");

                    b.HasKey("ProizvodID");

                    b.HasIndex("SlikaID");

                    b.HasIndex("TipProizvodaID");

                    b.HasIndex("UserID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Slika", b =>
                {
                    b.Property<int>("SlikaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserID");

                    b.Property<DateTime>("datumPostavljanja");

                    b.Property<string>("lokacijaSlike")
                        .IsRequired();

                    b.Property<byte[]>("slika");

                    b.HasKey("SlikaID");

                    b.HasIndex("UserID");

                    b.ToTable("Slika");
                });

            modelBuilder.Entity("ClassLibrary1.Models.TipProizvoda", b =>
                {
                    b.Property<int>("TipProizvodaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("TipProizvodaID");

                    b.ToTable("TipProizvoda");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Uloga", b =>
                {
                    b.Property<int>("ulogaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nazivUloge")
                        .IsRequired();

                    b.HasKey("ulogaID");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("ClassLibrary1.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UlogaID");

                    b.Property<string>("adresaStanovanja")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("brojTelefona")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("userID");

                    b.HasIndex("UlogaID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Proizvod", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Slika", "Slika")
                        .WithMany()
                        .HasForeignKey("SlikaID");

                    b.HasOne("ClassLibrary1.Models.TipProizvoda", "TipProizvoda")
                        .WithMany()
                        .HasForeignKey("TipProizvodaID");

                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Slika", b =>
                {
                    b.HasOne("ClassLibrary1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("ClassLibrary1.Models.User", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID");
                });
#pragma warning restore 612, 618
        }
    }
}
